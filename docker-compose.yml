version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: cybersec-portfolio-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: securepassword123
      MONGO_INITDB_DATABASE: cybersec_portfolio
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - cybersec-network

  # Backend API Server
  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: cybersec-portfolio-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:securepassword123@mongodb:27017/cybersec_portfolio?authSource=admin
      JWT_SECRET: your-production-jwt-secret-key
      CLIENT_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./uploads:/app/uploads
    networks:
      - cybersec-network

  # Frontend React Application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000
    container_name: cybersec-portfolio-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - cybersec-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: cybersec-portfolio-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - cybersec-network
    profiles:
      - production

  # Redis for Session Storage (Optional)
  redis:
    image: redis:alpine
    container_name: cybersec-portfolio-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cybersec-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  cybersec-network:
    driver: bridge
